// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoApp.Repository;

#nullable disable

namespace ToDoApp.Repository.Migrations
{
    [DbContext(typeof(ToDoAppContext))]
    partial class ToDoAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToDoApp.Repository.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Status_Name");

                    b.HasKey("Id")
                        .HasName("PK__Status__3214EC07170C10AE");

                    b.ToTable("Status", (string)null);
                });

            modelBuilder.Entity("ToDoApp.Repository.Models.TaskInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__TaskInfo__3214EC07656AE9A5");

                    b.ToTable("TaskInfo", (string)null);
                });

            modelBuilder.Entity("ToDoApp.Repository.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC07A608EC06");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ToDoApp.Repository.Models.UserTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CompletedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Flag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__UserTask__3214EC07E66BF108");

                    b.HasIndex("StatusId");

                    b.HasIndex("TaskId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTask", (string)null);
                });

            modelBuilder.Entity("ToDoApp.Repository.Models.UserTask", b =>
                {
                    b.HasOne("ToDoApp.Repository.Models.Status", "Status")
                        .WithMany("UserTasks")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK__UserTask__Status__571DF1D5");

                    b.HasOne("ToDoApp.Repository.Models.TaskInfo", "Task")
                        .WithMany("UserTasks")
                        .HasForeignKey("TaskId")
                        .IsRequired()
                        .HasConstraintName("FK__UserTask__TaskId__5629CD9C");

                    b.HasOne("ToDoApp.Repository.Models.User", "User")
                        .WithMany("UserTasks")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserTask__Flag__5535A963");

                    b.Navigation("Status");

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ToDoApp.Repository.Models.Status", b =>
                {
                    b.Navigation("UserTasks");
                });

            modelBuilder.Entity("ToDoApp.Repository.Models.TaskInfo", b =>
                {
                    b.Navigation("UserTasks");
                });

            modelBuilder.Entity("ToDoApp.Repository.Models.User", b =>
                {
                    b.Navigation("UserTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
